// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v5.29.3
// source: ticket_score.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TicketScore struct {
	state          protoimpl.MessageState    `protogen:"open.v1"`
	TicketId       int32                     `protobuf:"varint,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	CategoryScores []*CategoryScoreForTicket `protobuf:"bytes,2,rep,name=category_scores,json=categoryScores,proto3" json:"category_scores,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TicketScore) Reset() {
	*x = TicketScore{}
	mi := &file_ticket_score_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TicketScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketScore) ProtoMessage() {}

func (x *TicketScore) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_score_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketScore.ProtoReflect.Descriptor instead.
func (*TicketScore) Descriptor() ([]byte, []int) {
	return file_ticket_score_proto_rawDescGZIP(), []int{0}
}

func (x *TicketScore) GetTicketId() int32 {
	if x != nil {
		return x.TicketId
	}
	return 0
}

func (x *TicketScore) GetCategoryScores() []*CategoryScoreForTicket {
	if x != nil {
		return x.CategoryScores
	}
	return nil
}

type CategoryScoreForTicket struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CategoryId    int32                  `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	CategoryName  string                 `protobuf:"bytes,2,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`
	Score         float32                `protobuf:"fixed32,3,opt,name=score,proto3" json:"score,omitempty"`
	RatingCount   int32                  `protobuf:"varint,4,opt,name=rating_count,json=ratingCount,proto3" json:"rating_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CategoryScoreForTicket) Reset() {
	*x = CategoryScoreForTicket{}
	mi := &file_ticket_score_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CategoryScoreForTicket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryScoreForTicket) ProtoMessage() {}

func (x *CategoryScoreForTicket) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_score_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryScoreForTicket.ProtoReflect.Descriptor instead.
func (*CategoryScoreForTicket) Descriptor() ([]byte, []int) {
	return file_ticket_score_proto_rawDescGZIP(), []int{1}
}

func (x *CategoryScoreForTicket) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *CategoryScoreForTicket) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *CategoryScoreForTicket) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *CategoryScoreForTicket) GetRatingCount() int32 {
	if x != nil {
		return x.RatingCount
	}
	return 0
}

type ScoresByTicketResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tickets       []*TicketScore         `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScoresByTicketResponse) Reset() {
	*x = ScoresByTicketResponse{}
	mi := &file_ticket_score_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScoresByTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoresByTicketResponse) ProtoMessage() {}

func (x *ScoresByTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_score_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoresByTicketResponse.ProtoReflect.Descriptor instead.
func (*ScoresByTicketResponse) Descriptor() ([]byte, []int) {
	return file_ticket_score_proto_rawDescGZIP(), []int{2}
}

func (x *ScoresByTicketResponse) GetTickets() []*TicketScore {
	if x != nil {
		return x.Tickets
	}
	return nil
}

func (x *ScoresByTicketResponse) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *ScoresByTicketResponse) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

var File_ticket_score_proto protoreflect.FileDescriptor

const file_ticket_score_proto_rawDesc = "" +
	"\n" +
	"\x12ticket_score.proto\x12\tanalytics\x1a\x1fgoogle/protobuf/timestamp.proto\"v\n" +
	"\vTicketScore\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\x05R\bticketId\x12J\n" +
	"\x0fcategory_scores\x18\x02 \x03(\v2!.analytics.CategoryScoreForTicketR\x0ecategoryScores\"\x97\x01\n" +
	"\x16CategoryScoreForTicket\x12\x1f\n" +
	"\vcategory_id\x18\x01 \x01(\x05R\n" +
	"categoryId\x12#\n" +
	"\rcategory_name\x18\x02 \x01(\tR\fcategoryName\x12\x14\n" +
	"\x05score\x18\x03 \x01(\x02R\x05score\x12!\n" +
	"\frating_count\x18\x04 \x01(\x05R\vratingCount\"\xbc\x01\n" +
	"\x16ScoresByTicketResponse\x120\n" +
	"\atickets\x18\x01 \x03(\v2\x16.analytics.TicketScoreR\atickets\x129\n" +
	"\n" +
	"start_date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x125\n" +
	"\bend_date\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aendDateB\x17Z\x15go-grpc-backend/protob\x06proto3"

var (
	file_ticket_score_proto_rawDescOnce sync.Once
	file_ticket_score_proto_rawDescData []byte
)

func file_ticket_score_proto_rawDescGZIP() []byte {
	file_ticket_score_proto_rawDescOnce.Do(func() {
		file_ticket_score_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ticket_score_proto_rawDesc), len(file_ticket_score_proto_rawDesc)))
	})
	return file_ticket_score_proto_rawDescData
}

var file_ticket_score_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_ticket_score_proto_goTypes = []any{
	(*TicketScore)(nil),            // 0: analytics.TicketScore
	(*CategoryScoreForTicket)(nil), // 1: analytics.CategoryScoreForTicket
	(*ScoresByTicketResponse)(nil), // 2: analytics.ScoresByTicketResponse
	(*timestamppb.Timestamp)(nil),  // 3: google.protobuf.Timestamp
}
var file_ticket_score_proto_depIdxs = []int32{
	1, // 0: analytics.TicketScore.category_scores:type_name -> analytics.CategoryScoreForTicket
	0, // 1: analytics.ScoresByTicketResponse.tickets:type_name -> analytics.TicketScore
	3, // 2: analytics.ScoresByTicketResponse.start_date:type_name -> google.protobuf.Timestamp
	3, // 3: analytics.ScoresByTicketResponse.end_date:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_ticket_score_proto_init() }
func file_ticket_score_proto_init() {
	if File_ticket_score_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ticket_score_proto_rawDesc), len(file_ticket_score_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ticket_score_proto_goTypes,
		DependencyIndexes: file_ticket_score_proto_depIdxs,
		MessageInfos:      file_ticket_score_proto_msgTypes,
	}.Build()
	File_ticket_score_proto = out.File
	file_ticket_score_proto_goTypes = nil
	file_ticket_score_proto_depIdxs = nil
}
